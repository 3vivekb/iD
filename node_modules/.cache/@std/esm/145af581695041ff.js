"main";let eq;_695‍.w('./eq.js',[["default",function(v){eq=v}]]);let isArrayLike;_695‍.w('./isArrayLike.js',[["default",function(v){isArrayLike=v}]]);let isIndex;_695‍.w('./_isIndex.js',[["default",function(v){isIndex=v}]]);let isObject;_695‍.w('./isObject.js',[["default",function(v){isObject=v}]]);




/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

_695‍.d(isIterateeCall);
