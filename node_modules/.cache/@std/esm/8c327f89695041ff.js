"main";let constant;_695‍.w('./constant.js',[["default",function(v){constant=v}]]);let defineProperty;_695‍.w('./_defineProperty.js',[["default",function(v){defineProperty=v}]]);let identity;_695‍.w('./identity.js',[["default",function(v){identity=v}]]);



/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

_695‍.d(baseSetToString);
